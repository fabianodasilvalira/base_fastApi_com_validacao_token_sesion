# .env.example - FastAPI Auth System
# Renomeie este arquivo para .env e preencha com seus valores.

# --- Configurações da Aplicação ---
APP_ENV="development" # 'development' ou 'production'
PROJECT_NAME="FastAPI Auth System"
API_V1_STR="/api/v1"

# --- Configurações do Banco de Dados PostgreSQL ---
DB_HOST=db         # Ou o host do seu container Docker, ex: 'db'
DB_PORT=5434
DB_USER=db_restaurant
DB_PASS=db_restaurant
DB_NAME=db_restaurant
# DATABASE_URL="postgresql+asyncpg://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
# Se DATABASE_URL for descomentada, ela terá precedência sobre as variáveis individuais.

# --- Configurações de Autenticação JWT ---
# Gere uma chave secreta forte (ex: `openssl rand -hex 32`)
SECRET_KEY="your_strong_secret_key_here_please_change_me"
ALGORITHM="HS256"
SECRET_ALGORITHM="HS256"

ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# --- Configurações de Email (para recuperação de senha, etc.) ---
SMTP_TLS=True
SMTP_PORT=587
SMTP_HOST="smtp.example.com"
SMTP_USER="your_email@example.com"
SMTP_PASS="your_email_password"
EMAIL_FROM="your_email@example.com"
# EMAILS_ENABLED=True # Defina como True para habilitar o envio de emails

# --- Configurações de Logging ---
LOG_LEVEL="INFO" # DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE_PATH="./logs/app.log" # Caminho para o arquivo de log principal
ERROR_LOG_FILE_PATH="./logs/errors.log" # Caminho para o arquivo de log de erros
LOG_ROTATION_SIZE="10 MB" # Tamanho máximo antes da rotação
LOG_RETENTION_TIME="7 days" # Tempo para manter os arquivos de log rotacionados


REDIS_URL=redis://localhost:6379


# --- Configurações de CORS ---
# BACKEND_CORS_ORIGINS define as origens permitidas para requisições CORS.
# Formatos aceitos:
# 1. Uma string JSON representando uma lista de URLs. Exemplo:
#    BACKEND_CORS_ORIGINS='["http://localhost:3000", "http://localhost:8080"]'
# 2. Uma string contendo URLs separadas por vírgula. Exemplo:
#    BACKEND_CORS_ORIGINS="http://localhost:3000,http://localhost:8081"
# 3. Uma string com um asterisco "*" para permitir todas as origens (NÃO RECOMENDADO PARA PRODUÇÃO).
#    BACKEND_CORS_ORIGINS="*"
# O formato JSON é o mais robusto e recomendado para múltiplas URLs.
BACKEND_CORS_ORIGINS='["http://localhost", "http://localhost:8000", "http://localhost:3000"]'

# --- Outras Configurações ---
FIRST_SUPERUSER=admin@example.com
FIRST_SUPERUSER_PASSWORD=admin123

# Onde modificar estas configurações:
# - Este arquivo `.env.example` serve como um template. Crie um arquivo `.env` e preencha-o.
# - A aplicação lê estas variáveis usando `pydantic-settings`.
# - As definições dos modelos de settings estão em `app/core/config/`.
#   - `base.py`: Configurações base e leitura do .env.
#   - `database.py`: Configurações específicas do banco de dados.
#   - `security.py`: Configurações de JWT e hashing de senha, incluindo CORS.
#   - `logging.py`: Configurações de logging.
#   - `settings.py`: Agrega todas as configurações.

